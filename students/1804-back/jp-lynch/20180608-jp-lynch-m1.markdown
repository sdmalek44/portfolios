# JP Lynch - M1 Portfolio

## Areas of Emphasis

In module 1 I wanted to create a good base to build upon during the remainder of my time here at Turing.  I identified a couple areas that I knew I needed to improve upon during my time in Mod1, these areas being testing and readability.

## Rubric Scores

* **A: End-of-Module Assessment**: 3
* **B: Individual Work & Projects**: 3
* **C: Group Work & Projects**: 3
* **D: Professional Skills**: 3
* **E: Community Participation**: 2

-----------------------

## A: End of Module Assessment

Passed


## B: Individual Work & Projects

I feel I progressed through the projects here in Mod1. In the first project (mastermind) I first created it without any classes, and then had to adapt the code for classes.  By Black Thursday, we were planning out classes and modules before we ever began.

#### (mastermind)

* [GitHub URL](https://github.com/JPLynch35/mastermind)
* [Original Assignment](http://backend.turing.io/module1/projects/mastermind)

This project creates a REPL playable version of the game mastermind.  The user tries to guess the computer generated code (by guessing colors in each position).  The game ends when the player correctly guesses the computer generated code.

Too may attr_readers  
Too much in initialize  
Don't need to rename variables for Text.new  
Need to work on your naming of variables and methods  
if you're checking for 0 or 1 as flags, you should use a boolean  
Try to use less flags  
Runners needs to be refactored for readability  
Do this by making abstract, high level methods  
attr_readers should each be on a new line  

Ruby Syntax & Style: 2  
Breaking Logic into Components: 2  
Test-Driven Development: 3  
Functionality: 3  

#### (sortingcards)

* [GitHub URL](https://github.com/JPLynch35/SortingCards)
* [Original Assignment](http://backend.turing.io/module1/projects/sorting_cards)

This project utilizes nested classes which can access other classes to gain information.  It starts with a card, then builds a deck, then creates a round.  The round is required to access the deck class, the card class, and also a guess class.

overall pretty good  
clean  
card class does not follow spec in regards to value  
record_guess does not return guess object  
pretty thorough testing  

Ruby Syntax & Style: 3  
Breaking Logic into Components: 3  
Test-Driven Development: 3  
Functionality: 2   

#### (blackthursday)

* [GitHub URL](https://github.com/JPLynch35/black_thursday)
* [Original Assignment](http://backend.turing.io/module1/projects/black_thursday)

This was the final Mod1 project, and was done with partners.  It included creating a database for real world sales data (customers, invoices, invoice items, transactions, merchants, and items) and producing analytics for vairous requests (top item by merchant, one-time buyers, etc).

(evaluation comments)

(evaluation scores)

## C: Group Work & Projects

### Projects

Group projects added another layer of complexity and difficulty to the code projects.  First you had to Define The Relationship, and make sure you both were on the same page with project-work expectations.  Throughout the project, you had to combine ideas for making it through a problem.  In addition, merge conflicts on GitHub would pop up from time to time, creating another GitHub step. 

#### (engima)

* [GitHub URL](https://github.com/MLuce/Enigma)
* [Original Assignment](http://backend.turing.io/module1/projects/enigma)

This project was the first introduction to working with a partner on GitHub. The project utilized a rotating cipher (based on a random generated key and the current date) and encrypted a message.  The program then had to decrypt the message given the key and the date encrypted.  In addition, the program required a 'crack' method that would crack the encryption utilizing the knowledge that every message ended with '..end..'

Ruby Syntax & Style: 3  
Breaking Logic into Components: 3   
Git Workflow: 3.5  
Functionality: 4  

#### (battleship)

* [GitHub URL](https://github.com/JPLynch35/Battleship)
* [Original Assignment](http://backend.turing.io/module1/projects/battleship#start-game-sequence)

This project creates a REPL playable version of the game mastermind.  The user plays a game of battleship against the computer.  It starts with the player assigning the ship positions (2 and 3 unit log ships) in a 4x4 game board.  The player and the computer then take turns firing at positions until one side wins.

Clear and consistent commit messages following conventions. Would like to see more use of branches for specific features. 

## D: Professional Skills
The professional skills learned at Turing will be extremely valuable not just for our careers, but our outside social interactions.  Turing developers us as a community of people, and not just as single developers. 

### Gear Up
#### 

Mental Health 101
* [GitHub URL](https://github.com/turingschool/gear-up/blob/master/Mod1_Week1_mental_health_101.md)

Understanding your mental health is an important concept, especially at Turing.  Learning to understand your warning signs of stress, and what can de-stress you will follow you through any job.  Proper stress management can produce better results in any project you work through.

Code Debugging The Gender Gap
* [GitHub URL](https://github.com/turingschool/gear-up/blob/master/Mod1_Week3_Code_debugging_compact_version.md)

The gender gap problem, that is especially a problem in tech, is important to learn early in a tech career.  The issue stems from not accepting it as a problem to begin with.  Once it is accepted as a problem, steps can be taken to correct the issue and to make sure everyone is aware of the blatant social issue.

Winning Through Failure
* [GitHub URL](https://github.com/turingschool/gear-up/blob/master/m4_sessions/1804inning/winning_through_failure.md)

Failure is an inevitable part of life.  If you choose not to accept failure, then you choose not to accept progress.  We idolize all these people who have done these amazing feats, but what we don’t see is all the failure along the way.  The secret to success, is to never give up at failure.  Use it as a learning point, and you’ll be sure not to make the same mistake again.  Fail, fail, fail, fail, succeed.

## E: Community Participation

### Playing a Part

I attended the Machine Learning posse early in Mod1, but then I became a little overwhelmed with other work that I stopped attending.  I want to get back to a posse, now that I have a solid base to lean on for the rest of Turing.  Eventually, I would like to run a posse.

------------------

## Final Review

### Notes

( Leave blanks for reviewers )

### Outcome

( Leave blanks for reviewers )
